import{_ as e,c as i,o as t,ah as s}from"./chunks/framework.C0oJDTnj.js";const p=JSON.parse('{"title":"Quality Assurance (QA)","description":"","frontmatter":{},"headers":[],"relativePath":"tecnico/qa.md","filePath":"tecnico/qa.md"}'),l={name:"tecnico/qa.md"};function n(r,a,o,d,c,h){return t(),i("div",null,a[0]||(a[0]=[s(`<h1 id="quality-assurance-qa" tabindex="-1">Quality Assurance (QA) <a class="header-anchor" href="#quality-assurance-qa" aria-label="Permalink to &quot;Quality Assurance (QA)&quot;">​</a></h1><h2 id="estrategia-de-testes" tabindex="-1">Estratégia de Testes <a class="header-anchor" href="#estrategia-de-testes" aria-label="Permalink to &quot;Estratégia de Testes&quot;">​</a></h2><h3 id="testes-unitarios" tabindex="-1">Testes Unitários <a class="header-anchor" href="#testes-unitarios" aria-label="Permalink to &quot;Testes Unitários&quot;">​</a></h3><ul><li>Backend: Jest</li><li>Frontend: React Testing Library</li><li>Cobertura mínima: 80%</li></ul><h3 id="testes-de-integracao" tabindex="-1">Testes de Integração <a class="header-anchor" href="#testes-de-integracao" aria-label="Permalink to &quot;Testes de Integração&quot;">​</a></h3><ul><li>API: Supertest</li><li>E2E: Cypress</li><li>Fluxos críticos: <ul><li>Cadastro/Login</li><li>Lançamentos</li><li>Pagamentos</li></ul></li></ul><h3 id="testes-de-performance" tabindex="-1">Testes de Performance <a class="header-anchor" href="#testes-de-performance" aria-label="Permalink to &quot;Testes de Performance&quot;">​</a></h3><ul><li>K6 para testes de carga</li><li>New Relic para monitoramento</li><li>Métricas principais: <ul><li>Tempo de resposta</li><li>Throughput</li><li>Erro rate</li></ul></li></ul><h2 id="ambientes" tabindex="-1">Ambientes <a class="header-anchor" href="#ambientes" aria-label="Permalink to &quot;Ambientes&quot;">​</a></h2><h3 id="desenvolvimento" tabindex="-1">Desenvolvimento <a class="header-anchor" href="#desenvolvimento" aria-label="Permalink to &quot;Desenvolvimento&quot;">​</a></h3><ul><li>Local: Docker compose</li><li>Dev: AWS desenvolvimento</li><li>Staging: Réplica de produção</li></ul><h3 id="ci-cd-pipeline" tabindex="-1">CI/CD Pipeline <a class="header-anchor" href="#ci-cd-pipeline" aria-label="Permalink to &quot;CI/CD Pipeline&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Commit] --&gt; B[Testes]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C[Build]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; D[Deploy Staging]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; E[Testes E2E]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; F[Deploy Prod]</span></span></code></pre></div><h2 id="monitoramento" tabindex="-1">Monitoramento <a class="header-anchor" href="#monitoramento" aria-label="Permalink to &quot;Monitoramento&quot;">​</a></h2><h3 id="metricas" tabindex="-1">Métricas <a class="header-anchor" href="#metricas" aria-label="Permalink to &quot;Métricas&quot;">​</a></h3><ul><li>Uptime</li><li>Latência</li><li>Erros</li><li>Uso de recursos</li></ul><h3 id="alertas" tabindex="-1">Alertas <a class="header-anchor" href="#alertas" aria-label="Permalink to &quot;Alertas&quot;">​</a></h3><ul><li>Disponibilidade</li><li>Performance</li><li>Erros críticos</li><li>Uso de recursos</li></ul><h3 id="logging" tabindex="-1">Logging <a class="header-anchor" href="#logging" aria-label="Permalink to &quot;Logging&quot;">​</a></h3><ul><li>Centralizado (ELK Stack)</li><li>Retention: 30 dias</li><li>Níveis: INFO, WARN, ERROR</li></ul>`,20)]))}const m=e(l,[["render",n]]);export{p as __pageData,m as default};
